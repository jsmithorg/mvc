package org.jsmith.mvc.model{	import flash.utils.Dictionary;
	import flash.events.IEventDispatcher;		public interface IModelRegister extends IEventDispatcher	{		/**		 * The <code>Dictionary</code> containing the <code>IModel</code> instances.		 */		function get models():Dictionary;				/**		 * 	Registers an <code>IModel</code> instance with the <code>ModelRegister</code>.		 *			 * 	@param model The <code>IModel</code> instance.		 *  @param modelID The ID of the <code>IModel</code> instance (this is optional 		 *  in case the modelID has been set in the <code>IModel</code> instance).		 * 		 * 	@throws com.glg.mvc.error.MVCError The modelID must be set (either in the <code>		 * 	IModel</code> or as a provided parameter), otherwise this error is thrown with the following 		 * 	message: <em>modelID must be set before registering the IModel</em>		 */		function register(model:IModel, modelID:String = null):void		/**		 * 	Retrieves a particular model based on the model's ID.		 * 	<p>If the model does not exist, <code>null</code> is 		 * 	returned</p>		 * 		 *  @param modelID The ID of the <code>IModel</code> instance.		 * 		 * 	@return An <code>IModel</code> instance.		 */		function retrieve(modelID:String):IModel			/**		 * 	Removes a particular model based on the model's ID.		 * 	<p>If the model does not exist, the <code>remove</code>		 * 	request is silently ignored.</p>		 * 		 * 	@param modelID The ID of the <code>IModel</code> instance.		 */		function remove(modelID:String):void			/**		 * 	Boolean expressing whether a particular model is registered or		 * 	not based on the model's ID.		 * 		 * 	@param modelID The ID of the <code>IModel</code> instance.		 * 		 * 	@return <code>true</code> if the model is present, <code>false</code> if the model could not be found.		 */		function hasModel(modelID:String):Boolean			}//end interface	}//end package