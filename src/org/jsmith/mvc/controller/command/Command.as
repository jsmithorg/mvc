package org.jsmith.mvc.controller.command{	import flash.events.*;	import flash.utils.Dictionary;		import org.jsmith.mvc.controller.*;	import org.jsmith.mvc.controller.command.ICommand;	import org.jsmith.mvc.error.*;	import org.jsmith.mvc.events.MVCEventDispatcher;	import org.jsmith.mvc.model.ModelRegister;	import org.jsmith.mvc.view.ViewRegister;
	import org.jsmith.mvc.events.MVCEvent;		/**	 * 	Dispatched when an <code>ICommand</code> instance progresses.	 * 	 * 	@see org.jsmith.mvc.controller.command.ICommand	 */	[Event(name="commandProgress", type="org.jsmith.mvc.events.MVCEvent.COMMAND_PROGRESS")]		public class Command extends EventDispatcher implements IEventDispatcher, ICommand, ICommandProgress	{		protected static var model:Dictionary = ModelRegister.getModels();		protected static var controller:IController = Controller.getInstance();		protected static var view:Dictionary = ViewRegister.getViews();		protected static var mvcEventDispatcher:MVCEventDispatcher = MVCEventDispatcher.getInstance();				/**		 * 	@inheritDoc		 */		public function get percentComplete():Number { return -1; }				/**		 * 	@inheritDoc		 */		public function execute(event:Event = null):void 		{			throw new MVCError(MVCErrorCodes.ABSTRACT_METHOD_ERROR);					}//end method				/**		 * 	@inheritDoc		 */		public function undo(event:Event = null):void 		{			throw new MVCError(MVCErrorCodes.ABSTRACT_METHOD_ERROR);					}//end method				/**		 * 	Dispatches a <code>commandProgress</code> event.		 * 	<p>This is used for notifying when progress has been made in the execution of the <code>Command</code>.</p>		 * 	<p>In order to use this, the <code>percentComplete</code> property must be overriden in the derived class.		 * 		 * 	@see org.jsmith.mvc.controller.command.ICommandProgress		 *  @see org.jsmith.mvc.events.MVCEvent.COMMAND_PROGRESS		 */		protected function onProgress():void		{			var e:MVCEvent = new MVCEvent(MVCEvent.COMMAND_PROGRESS, this);			dispatchEvent(e);						}//end method				/**		 * 	Dispatches a <code>complete</code> event.		 * 	<p>This is used for notifying when progress has finished in the execution of the <code>Command</code>.</p>		 */		protected function onComplete():void		{			var e:Event = new Event(Event.COMPLETE);			dispatchEvent(e);					}//end method			}//end class	}//end package