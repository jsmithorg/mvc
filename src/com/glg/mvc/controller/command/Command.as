package com.glg.mvc.controller.command{	import flash.events.*;	import flash.utils.Dictionary;		import com.glg.mvc.controller.*;	import com.glg.mvc.controller.command.ICommand;	import com.glg.mvc.error.MVCError;	import com.glg.mvc.events.MVCEventDispatcher;	import com.glg.mvc.model.ModelRegister;	import com.glg.mvc.view.ViewRegister;		public class Command extends EventDispatcher implements ICommand, IEventDispatcher	{		protected static var model:Dictionary = ModelRegister.getModels();		protected static var controller:IController = Controller.getInstance();		protected static var view:Dictionary = ViewRegister.getViews();		protected static var mvcEventDispatcher:MVCEventDispatcher = MVCEventDispatcher.getInstance();				public function execute(event:Event = null):void 		{			throw new MVCError(MVCError.ABSTRACT_METHOD_ERROR);					}//end method				public function undo(event:Event = null):void 		{			throw new MVCError(MVCError.ABSTRACT_METHOD_ERROR);					}//end method				protected function onComplete():void		{			var e:Event = new Event(Event.COMPLETE);			dispatchEvent(e);					}//end method			}//end class	}//end package